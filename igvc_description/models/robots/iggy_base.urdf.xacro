<?xml version="1.0"?>

<robot
    xmlns:xacro="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
    xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
    xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
    xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface">
    
    <xacro:include filename="$(find igvc_description)/models/robots/inertial_tensors.urdf.xacro" />
    <xacro:include filename="$(find igvc_description)/models/robots/single_wheel.urdf.xacro" />
    <xacro:include filename="$(find igvc_description)/models/robots/basic_colors.urdf.xacro" />
    <xacro:include filename="$(find igvc_description)/models/robots/plexiglass_mount.urdf.xacro" />
    
    <!-- Properties (Constants) -->
    <property name="M_PI" value="3.14159"/>
    
    <property name="base_size_x" value="0.380" />
    <property name="base_size_y" value="0.3" />
    <property name="base_size_z" value="0.085" />
    <property name="base_mass" value="25.0" />
    
    <property name="wheel_radius_big" value="0.085" />
    <property name="wheel_size_y" value="0.0825" />
    <property name="wheel_mass" value="0.1" />

    <property name="wheel_offset_z_from_base_link" value="-${wheel_radius_big}" />
    
    <macro name="iggy_base_macro">
        <!-- Links and Joints (i.e., the robot) 
        <link name="base_link"/>
        <joint name="bf_to_bl" type="fixed">
          <origin xyz="0.0 0.0 -${base_size_z * 2}" rpy="0.0 0.0 0.0" />
          <parent link="base_link"/>
          <child link="base_footprint"/>
        </joint> -->

        <link name="base_link">
            <inertial>
                <mass value="${base_mass}" />
                <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
                <rectangular_prism_tensor mass="${base_mass}" len_x="${base_size_x}" len_y="${base_size_y}" len_z="${base_size_z}" />
            </inertial>

            <!-- compare the two visual pieces until they match up in size then delete the mesh -->
            <visual>
                <origin xyz="${base_size_x - 0.05} 0.0 -${base_size_z * 2}" rpy="0 0 1.57" />
                <geometry>
                    <mesh filename="package://igvc_description/models/meshes/base_link.STL"/>
                </geometry>
                <Gray />
            </visual>
            <!--visual>
                <origin xyz="0.0 0.0 -0.085" rpy="0 0 0" />
                <geometry>
                    <box size="${base_size_x} ${base_size_y} ${base_size_z}" />
                </geometry>
                <Green />
            </visual-->

            <collision>
                <origin xyz="0.0 0.0 -0.085" rpy="0 0 0" />
                <geometry>
                    <box size="${base_size_x} ${base_size_y} ${base_size_z}" />
                </geometry>
            </collision>
        </link>
        
        
        <tracked_wheel parent="base_link" prefix="left_0"  offset_x=" 0.25100" offset_y=" ${base_size_y / 2}" offset_z="${wheel_offset_z_from_base_link}      " reflect="1" radius="${wheel_radius_big}" height="${wheel_size_y}" mass="${wheel_mass}"/>
        <tracked_wheel parent="base_link" prefix="left_1"  offset_x=" 0.00000" offset_y=" ${base_size_y / 2}" offset_z="${wheel_offset_z_from_base_link-0.005}" reflect="1" radius="${wheel_radius_big}" height="${wheel_size_y}" mass="${wheel_mass}"/>
        <tracked_wheel parent="base_link" prefix="left_2"  offset_x="-0.25100" offset_y=" ${base_size_y / 2}" offset_z="${wheel_offset_z_from_base_link}      " reflect="1" radius="${wheel_radius_big}" height="${wheel_size_y}" mass="${wheel_mass}"/>
        <tracked_wheel parent="base_link" prefix="left_3"  offset_x=" 0.10550" offset_y=" ${base_size_y / 2}" offset_z="${wheel_offset_z_from_base_link}      " reflect="1" radius="${wheel_radius_big}" height="${wheel_size_y}" mass="${wheel_mass}"/>
        <tracked_wheel parent="base_link" prefix="left_4"  offset_x="-0.10550" offset_y=" ${base_size_y / 2}" offset_z="${wheel_offset_z_from_base_link}      " reflect="1" radius="${wheel_radius_big}" height="${wheel_size_y}" mass="${wheel_mass}"/>
        <tracked_wheel parent="base_link" prefix="left_5"  offset_x=" 0.00500" offset_y=" ${base_size_y / 2}" offset_z="${wheel_offset_z_from_base_link+0.005}" reflect="1" radius="${wheel_radius_big}" height="${wheel_size_y}" mass="${wheel_mass}"/>
        <tracked_wheel parent="base_link" prefix="right_0" offset_x=" 0.25100" offset_y="-${base_size_y / 2}" offset_z="${wheel_offset_z_from_base_link}      " reflect="1" radius="${wheel_radius_big}" height="${wheel_size_y}" mass="${wheel_mass}"/>
        <tracked_wheel parent="base_link" prefix="right_1" offset_x=" 0.00000" offset_y="-${base_size_y / 2}" offset_z="${wheel_offset_z_from_base_link-0.005}" reflect="1" radius="${wheel_radius_big}" height="${wheel_size_y}" mass="${wheel_mass}"/>
        <tracked_wheel parent="base_link" prefix="right_2" offset_x="-0.25100" offset_y="-${base_size_y / 2}" offset_z="${wheel_offset_z_from_base_link}      " reflect="1" radius="${wheel_radius_big}" height="${wheel_size_y}" mass="${wheel_mass}"/>
        <tracked_wheel parent="base_link" prefix="right_3" offset_x="-0.10550" offset_y="-${base_size_y / 2}" offset_z="${wheel_offset_z_from_base_link}      " reflect="1" radius="${wheel_radius_big}" height="${wheel_size_y}" mass="${wheel_mass}"/>
        <tracked_wheel parent="base_link" prefix="right_4" offset_x=" 0.10550" offset_y="-${base_size_y / 2}" offset_z="${wheel_offset_z_from_base_link}      " reflect="1" radius="${wheel_radius_big}" height="${wheel_size_y}" mass="${wheel_mass}"/>
        <tracked_wheel parent="base_link" prefix="right_5" offset_x=" 0.00500" offset_y="-${base_size_y / 2}" offset_z="${wheel_offset_z_from_base_link+0.005}" reflect="1" radius="${wheel_radius_big}" height="${wheel_size_y}" mass="${wheel_mass}"/>
        
        <gazebo>
        
        <!-- TODO: make custom plugin for this that doesn't require an imu -->
        <plugin name="diffdrive_plugin_multiwheel" filename="libdiffdrive_plugin_multi_wheel.so">                
                <alwaysOn>true</alwaysOn>
            <robotNamespace>roboteq_driver</robotNamespace>
                <updateRate>50.0</updateRate>
                <leftJoints>left_0_wheel_joint left_1_wheel_joint left_2_wheel_joint left_3_wheel_joint left_4_wheel_joint left_5_wheel_joint</leftJoints>
                <rightJoints>right_0_wheel_joint right_1_wheel_joint right_2_wheel_joint right_3_wheel_joint right_4_wheel_joint right_5_wheel_joint</rightJoints>
                <wheelSeparation>${base_size_y}</wheelSeparation>
                <wheelDiameter>${wheel_radius_big*2}</wheelDiameter>
                <torque>50000</torque>
                <interface:position name="position_iface_2"/>
                <robotNamespace>/</robotNamespace>
                <robotBaseFrame>base_link</robotBaseFrame>
                <odometryFrame>odom</odometryFrame>
                <commandTopic>/roboteq_driver/cmd_vel</commandTopic>
                <publishOdometryTf>1</publishOdometryTf>
                <publishOdometryMsg>1</publishOdometryMsg>
                <odometryTopic>/iggy/odom</odometryTopic>
        </plugin>
        
        <plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>50.0</updateRate>
          <bodyName>base_link</bodyName>
          <topicName>/iggy/ground_truth/state</topicName>
          <gaussianNoise>0.01</gaussianNoise>
          <frameName>world</frameName>
          <xyzOffsets>0 0 0</xyzOffsets>
          <rpyOffsets>0 0 0</rpyOffsets>
        </plugin>

        <plugin name="imu_controller" filename="libhector_gazebo_ros_imu.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>50.0</updateRate>
          <bodyName>base_link</bodyName>
          <topicName>/imu/data</topicName>
          <accelDrift>0.0 0.0 0.0</accelDrift>
          <accelGaussianNoise>0.1 0.1 0.1</accelGaussianNoise>
          <rateDrift>0.0 0.0 0.0</rateDrift>
          <rateGaussianNoise>0.05 0.05 0.05</rateGaussianNoise>
          <headingDrift>0.0</headingDrift>
          <headingGaussianNoise>0.05</headingGaussianNoise>
        </plugin>

        <plugin name="gps_controller" filename="libhector_gazebo_ros_gps.so">
            <alwayson>1</alwayson>
            <robotNamespace>gps</robotNamespace>
            <updaterate>10.0</updaterate>
            <bodyname>base_link</bodyname>
            <frameId>map</frameId>
            <topicname>fix</topicname>
            <referenceLatitude>42.679231</referenceLatitude>
            <referenceLongitude>-83.195507</referenceLongitude>
            <referenceHeading>180</referenceHeading>
            <referenceAltitude>282</referenceAltitude>
            <velocitytopicname>fixvelocity</velocitytopicname>
            <drift>5.0 5.0 5.0</drift>
            <gaussiannoise>0.1 0.1 0.1</gaussiannoise>
            <velocitydrift>0 0 0</velocitydrift>
            <velocitygaussiannoise>0.1 0.1 0.1</velocitygaussiannoise>
        </plugin>
            
        </gazebo>
        
    </macro>
</robot>
